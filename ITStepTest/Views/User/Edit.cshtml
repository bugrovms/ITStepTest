@model ITStepTest.Models.User

@{
    ViewBag.Title = "Пользователи";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Студент",
        Value = "0",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Преподаватель",
        Value = "1"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Администратор",
        Value = "2"
    });

    List<SelectListItem> groups = new List<SelectListItem>();
    int i = 0;
    foreach (var group in ViewBag.Groups)
    {
        if (i < 1)
        {
            groups.Add(new SelectListItem
            {
                Text = group.Name,
                Value = group.Id.ToString(),
                Selected = true
            });
        }
        else
        {
            groups.Add(new SelectListItem
            {
                Text = group.Name,
                Value = group.Id.ToString()
            });
        }

        i++;
    }
}


@Html.Partial("_Menu")

<section class="main-section-content">
    <div class="row ">
        <div class="content">
            <div class="col-md-12">
                <br /><br />
                <h3>
                    <b>Редактировать пользователя</b>
                </h3>
                <hr />

                @using (Html.BeginForm())
                {
                    <div class="error">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                    </div>

                    <fieldset>
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(m => m.Email, "Email")
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, "Имя")
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, "Фамилия")
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <div class="form-group hide">
            @Html.LabelFor(model => model.DateCreate)
            @Html.EditorFor(model => model.DateCreate, new { @Value = DateTime.Now })
            @Html.ValidationMessageFor(model => model.DateCreate)
        </div>
        <div class="form-group hide">
            @Html.LabelFor(model => model.Date)
            @Html.EditorFor(model => model.Date, new { @Value = DateTime.Now })
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, "Телефон")
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
                        @if (Model.Role == 0) { 
                            <div class="form-group" id="register-group-select">
            @Html.LabelFor(m => m.GroupId, "Группа")
            @Html.DropDownListFor(m => m.GroupId, groups, new { @class = "form-control" })
        </div>
                        } else
                        { 
                        <div class="form-group" id="register-group-select" style="display: none;">
            @Html.LabelFor(m => m.GroupId, "Группа")
            @Html.DropDownListFor(m => m.GroupId, groups, new { @class = "form-control" })
        </div>
                        }
        
        <div class="form-group">
            @Html.LabelFor(m => m.Role, "Роль")
            @Html.DropDownListFor(m => m.Role, listItems, new { @class = "form-control", @id = "register-role-select" })
        </div>        
        <div class="form-group hide">
            @Html.LabelFor(model => model.Active)
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active)
        </div>        

        <p>
            <br />
            <input type="submit" class="btn btn-default" value="Сохранить" />
        </p>
    </fieldset>
                }
                <br />
                <div>
                    @Html.ActionLink("Вернуться к списку", "Index")
                </div>
            </div>
        </div>
    </div>
    <div id="scrollup">
        <img alt="Прокрутить вверх" src="/Images/to_top.png">
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
